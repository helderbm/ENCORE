{
  "openapi": "3.0.0",
  "info": {
    "title": "BROKER",
    "version": "1.0",
    "description": "Interaction between the Cloud Broker platform (responsible for managing sensors data) and third-party software applications",
    "contact": {
      "name": "Helder Moreira",
      "email": "helder@spa.pt"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/server": {
      "get": {
        "summary": "SERVER endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "token": {
                "schema": {
                  "type": "string"
                },
                "description": "Token return by server after authentication process",
                "required": true
              },
              "request-id": {
                "schema": {
                  "type": "string"
                },
                "description": "unique id used in the request HEADER"
              },
              "api-ver": {
                "schema": {
                  "type": "string"
                },
                "description": "API-VER, default is latest stable"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/server"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "": {
            "description": "Response with server info",
            "headers": {
              "token": {
                "schema": {
                  "type": "string"
                },
                "description": "Token return by server after authentication process"
              },
              "request-id": {
                "schema": {
                  "type": "string"
                },
                "description": "unique id used in the request HEADER"
              }
            }
          }
        },
        "operationId": "get-server",
        "description": "Information regarding Cloud Server",
        "requestBody": {
          "description": "Request parameters to be used in future",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "required": true,
            "description": "Token return by server after authentication process"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "request-id",
            "description": "unique id to be used in the response HEADER"
          },
          {
            "schema": {
              "type": "string",
              "default": "1"
            },
            "in": "header",
            "name": "api-ver",
            "description": "API-VER, default is latest stable"
          }
        ]
      },
      "parameters": []
    },
    "/sgws/{id}": {
      "get": {
        "summary": "SGWS endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sgw": {
                      "$ref": "#/components/schemas/sgw-info"
                    },
                    "sensors": {
                      "$ref": "#/components/schemas/sgw-sensors"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "get-sgws",
        "description": "Endpoint representing the smart gateways on the field",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "response-id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "api-ver"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/sgws/{id}/sensors/{sensorId}": {
      "get": {
        "summary": "SENSORS endoint",
        "tags": [],
        "responses": {},
        "operationId": "get-sgws-sensors",
        "description": "Endpoint representing the sensors instaled on smart gateways on the field"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "sensorId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/login": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "token": {
                "schema": {
                  "type": "string"
                },
                "description": "Token to be used in future requests"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/server"
                }
              }
            }
          }
        },
        "operationId": "get-login",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "user-id",
            "required": true,
            "description": "User id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "pass-id",
            "required": true,
            "description": "User password"
          }
        ]
      }
    },
    "/sgws": {
      "parameters": [],
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sgw-info"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/sgw-info"
                  }
                }
              }
            },
            "headers": {
              "token": {
                "schema": {
                  "type": "string"
                },
                "description": "Token return by server after authentication process",
                "required": true
              },
              "response-id": {
                "schema": {
                  "type": "string"
                },
                "description": "unique id used in the request HEADER"
              },
              "api-ver": {
                "schema": {
                  "type": "string"
                },
                "description": "API-VER, default is latest stable"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "get-sgws-{list}",
        "description": "End point representing all SGWS, depending on login permissions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filter": {
                    "type": "object",
                    "properties": {
                      "online": {
                        "type": "boolean"
                      },
                      "alerts": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "token",
            "required": true,
            "description": "Token return by server after authentication process"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "response-id",
            "description": "unique id to be used in the response HEADER"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "api-ver"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "sensor": {
        "title": "sensor",
        "type": "object",
        "description": "Model for Sensor description",
        "properties": {
          "id": {
            "type": "string"
          },
          "mac": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "last-comm": {
            "type": [
              "string",
              "integer"
            ]
          },
          "manufactor": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "LQI": {
            "type": "number"
          },
          "RSSI": {
            "type": "number"
          },
          "battery-level": {
            "type": "integer"
          },
          "tecnology": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/sensor-type"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "sensor-dg": {
        "title": "sensor-dg-hum",
        "type": "object",
        "description": "Model for Database entries of sensors readings",
        "properties": {
          "id": {
            "type": "number"
          },
          "sensor-id": {
            "type": "string"
          },
          "dg-type": {
            "type": "integer"
          },
          "timestamp": {
            "type": "integer"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "sgw-alerts": {
        "title": "sgw-dg-alerts",
        "type": "object",
        "description": "Alert entries from SGW and respective sensors",
        "properties": {
          "id": {
            "type": "string"
          },
          "sensor-id": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "processed": {
            "type": "boolean"
          },
          "raw": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "sensor-id",
          "timestamp",
          "type",
          "level",
          "description",
          "processed"
        ]
      },
      "gps": {
        "title": "gps",
        "type": "object",
        "properties": {
          "lat": {
            "type": "string"
          },
          "long": {
            "type": "string"
          }
        },
        "description": "GPS location"
      },
      "server": {
        "title": "server",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "encryption": {
            "$ref": "#/components/schemas/encryption-supported"
          }
        },
        "description": "List of Cloud Broker Server capabilities and status"
      },
      "encryption-supported": {
        "title": "encryption-types",
        "type": "object",
        "description": "Type of encryption communications supported",
        "properties": {
          "MCRYPT_RIJNDAEL_256": {
            "type": "boolean"
          },
          "blockchain": {
            "type": "boolean"
          }
        }
      },
      "sensor-type": {
        "title": "sensor-type",
        "type": "object",
        "properties": {
          "ligth": {
            "type": "boolean"
          },
          "temp": {
            "type": "boolean"
          },
          "mov": {
            "type": "boolean"
          },
          "hum": {
            "type": "boolean"
          },
          "alarm": {
            "type": "boolean"
          },
          "co2": {
            "type": "boolean"
          }
        },
        "description": "Model of sensor capabilities"
      },
      "sgw-info": {
        "title": "sgw-info",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "hw-ver": {
            "type": "string"
          },
          "cluster": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "last-comm": {
            "type": "string"
          },
          "sofware-ver": {
            "type": "string"
          },
          "public-ip": {
            "type": "string"
          },
          "local-ip": {
            "type": "string"
          },
          "gps": {
            "$ref": "#/components/schemas/gps"
          },
          "adress": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Simple Model representation of the remote SGW object"
      }
    }
  }
}